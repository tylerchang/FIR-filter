<!DOCTYPE REFENTRY PUBLIC "-//Sun Microsystems//DTD DocBook V3.0-Based SolBook Subset V2.0//EN" [
<!--ArborText, Inc., 1988-1998, v.4001-->
<!ENTITY % javaents SYSTEM "javaman.ent">
%javaents;
]>
<?Pub UDT _bookmark _target>
<refentry id="java-1">
<!--@(#)java.1 1.24 01/03/14 SMI;-->
<refmeta><refentrytitle>java</refentrytitle><manvolnum>1</manvolnum>
<refmiscinfo class="date">2002 年 9 月 16 日<?Pub Caret></refmiscinfo>
<refmiscinfo class="sectdesc">&man1;</refmiscinfo>
<refmiscinfo class="software">&java-release;</refmiscinfo>
<refmiscinfo class="arch">generic</refmiscinfo>
<refmiscinfo class="copyright"> Copyright 2002 Sun Microsystems, Inc. All
rights reserved.  Copyright 2002 Sun Microsystems, Inc. Tous droits r&eacute;serv&eacute;s.</refmiscinfo>
</refmeta>
<refnamediv><refname>java</refname><refpurpose>Java インタプリタ</refpurpose></refnamediv>
<refsynopsisdiv><title>&synp-tt;</title>
<cmdsynopsis><command>java</command><arg choice="opt"><replaceable>options</replaceable></arg><arg choice="plain"><replaceable>class</replaceable></arg><arg choice="opt" rep="repeat"><replaceable>argument</replaceable></arg>
</cmdsynopsis>
<cmdsynopsis><command>java</command><arg choice="opt"><replaceable>options</replaceable></arg><arg choice="plain"><option>jar</option>&nbsp;<replaceable>file.jar</replaceable></arg><arg choice="opt" rep="repeat"><replaceable>argument</replaceable></arg>
</cmdsynopsis></refsynopsisdiv>
<refsect1><title>&parm-tt;</title>
<para>オプションの指定順序は任意です。特定のオプションに適用されるパラメータについては、以下の「&opts-tt;」節を参照してください。</para>
<variablelist termlength="narrow"><varlistentry><term remap="15"><replaceable>options</replaceable> </term><listitem><para>コマンド行オプション。以下を参照</para>
</listitem></varlistentry>
<varlistentry><term><replaceable>class</replaceable> </term><listitem><para>呼び出されるクラスの名前</para>
</listitem></varlistentry>
<varlistentry><term><replaceable>file.jar</replaceable> </term><listitem><para>呼び出されるファイルの名前。必ず <option>jar</option> と同時に使用される</para>
</listitem></varlistentry>
</variablelist>
</refsect1>
<refsect1><title>&desc-tt;</title>
<indexterm id="java-1-indx-1"><primary sortas="Java interpreter">Java interpreter &mdash; java</primary></indexterm><indexterm id="java-1-indx-2"><primary sortas="java">java &mdash; Java interpreter</primary></indexterm>
<para><command>java</command> ツールは、Java アプリケーションを起動します。<command>java</command> ツールは、Java Runtime Environment を起動したあと、指定されたクラスをロードし、このクラスの <literal>main</literal> メソッドを呼び出して Java アプリケーションを起動します。<literal>main</literal> メソッドは次のシグニチャを持っていなければなりません。<informalexample>
<para><screen>public static void main(String args[])</screen></para>
</informalexample></para>
<para>このメソッドは <literal>public</literal> および <literal>static</literal> で宣言され、値を返さず、パラメータとして <literal>String</literal> 配列を使用できなければなりません。デフォルトでは、オプションではない最初の引数が、呼び出すクラスの名前になります。この名前には、完全指定のクラス名を使用する必要があります。<option>jar</option> オプションを指定した場合、オプションではない最初の引数は、アプリケーションのクラスファイルとリソースファイルを含む <acronym>JAR</acronym> アーカイブの名前になります。この場合、Main-Class マニフェストヘッダで指定されたクラスがスタートアップクラスになります。</para>
<para>Java Runtime は、ブートストラップクラスパス、インストール型拡張機能、およびユーザクラスパスの 3 つの場所から、起動クラスとその他の使用するクラスを探します。</para>
<para>クラス名または <acronym>JAR</acronym> ファイル名のあとにあるオプションではない引数は、main 関数に渡されます。</para>
</refsect1>
<refsect1><title>&opts-tt;</title>
<para>起動コマンドには、現在の実行環境および将来のリリースでサポートされる 標準オプションがあります。ただし以下で説明するように、別のオプションに 置き換えられたオプションは現在では使われておらず、将来のリリース では削除される予定です。このほかの非標準オプションは、現在の仮想マシンの実装に固有のオプションで、将来変更される可能性があります。非標準オプションは <option>X</option> で始まります。</para>
<refsect2><title>標準オプション</title>
<indexterm id="java-1-indx-3"><primary sortas="java">java &mdash; Java interpreter</primary><secondary>Standard Options</secondary></indexterm><variablelist termlength="wholeline"><varlistentry><term remap="20"><option>client</option> </term><listitem><para>Java HotSpot Client <acronym remap="small">VM</acronym> を選択します。これがデフォルトです。</para>
</listitem></varlistentry>
<varlistentry><term><option>server</option> </term><listitem><para>Java HotSpot Server <acronym remap="small">VM</acronym> を選択します。</para>
</listitem></varlistentry>
<varlistentry><term><option>classpath</option> <replaceable>classpath</replaceable> </term><listitem><para></para>
</listitem></varlistentry>
<varlistentry><term><option>cp</option> <replaceable>classpath</replaceable> </term><listitem><para>クラスファイルを探すディレクトリ、<acronym>JAR</acronym> アーカイブ、および <acronym>ZIP</acronym> アーカイブのリストを指定します。クラスパスの各エントリはコロン (:) で区切ります。<option>classpath</option> または <option>cp</option> を指定すると、これらのオプションの値によって <envar>CLASSPATH</envar> 環境変数の設定は上書きされます。<option>classpath</option> と <option>cp</option> を使用せず、<envar>CLASSPATH</envar> も設定されていない場合、ユーザクラスパスは現在のディレクトリ (.) になります。</para>
</listitem></varlistentry>
<varlistentry><term><option>debug</option> </term><listitem><para><option>Xdebug</option> に置き換わりました。</para>
</listitem></varlistentry>
<varlistentry><term><option>D</option><replaceable>property=value</replaceable> </term><listitem><para>システムプロパティの値を設定します。</para>
</listitem></varlistentry>
<varlistentry><term><option>d32</option></term><term><option>d64</option></term><listitem><para>プログラムを 32 ビットまたは 64 ビット環境で動作させるかを指定します。Solaris では、32 ビットは ILP32 データモデルに、64 ビットは LP64 データモデルにそれぞれ相当します。<option>d64</option> オプションは、64 ビット Solaris システム上でしか使用できません。</para>
<para>現在、64 ビットのオペレーションをサポートするのは Java HotSpot Server VM だけであり、<option>server</option> オプションは <option>d64</option> の使用を暗黙的に示しています。この点は、将来のリリースで変更される可能性があります。</para>
<para><option>d32</option>、<option>d64</option> のどちらも指定されない場合、デフォルトは 32 ビット環境での実行になります。この点は、将来のリリースで変更される可能性があります。</para>
</listitem></varlistentry>
<varlistentry><term><option>enableassertions</option>[:<replaceable>package name</replaceable> ". . ." | :<replaceable>class name</replaceable> ]</term><term><option>ea</option>[:<replaceable>package name</replaceable> ". . . " | :<replaceable>class name</replaceable>]</term><listitem><para>表明を有効にします。デフォルトでは表明は無効です。</para>
<para>引数が指定されない場合、<option>enableassertions</option> または <option>ea</option> は表明を有効にします。"..." で終わる引数が 1 つ指定されると、スイッチは指定されたパッケージおよびサブパッケージ (存在する場合) 内の表明を有効にします。引数が単に "..." である場合、スイッチは現在の作業ディレクトリ内の名前の指定されていないパッケージ内の表明を有効にします。"..." で終わっていない引数が 1 つ指定されると、スイッチは指定されたクラス内の表明を有効にします。</para>
<para>単一のコマンド行にこれらのスイッチの複数のインスタンスが指定されている場合、それらはクラスをロードする前に順番に処理されます。このため、たとえばパッケージ <literal>com.wombat.fruitbat</literal> (およびサブパッケージ) 内でのみ表明を有効にしてプログラムを実行する場合、次のコマンドを使用できます。<informalexample><screen>example% <userinput>java -ea:com.wombat.fruitbat... <replaceable>MainClass</replaceable></userinput></screen>
</informalexample></para>
<para><option>enableassertions</option> と <option>ea</option> スイッチは、すべてのクラスローダおよびシステムクラス (クラスローダを持たないもの) に適用されます。この規則には 1 つ例外があります。引数が指定されないフォームでは、スイッチはシステムに適用されません。この例外は、システムクラス以外の全クラス内の表明を有効にする上で便利です。すべてのシステムクラス内の表明を有効にするスイッチは別に用意されています。以下の <option>enablesystemassertions</option> を参照してください。</para>
</listitem></varlistentry>
<varlistentry><term><option>disableassertions</option>[:<replaceable>package name</replaceable> ". . ." | :<replaceable>class name</replaceable> ]</term><term><option>da</option>[:<replaceable>package name</replaceable> ". . ." | :<replaceable>class name</replaceable>]</term><listitem><para>表明を無効にします。これはデフォルトです。</para>
<para>引数が指定されないと、<option>disableassertions</option> または <option>da</option> は表明を無効にします。"..." で終わる引数を 1 つ指定すると、スイッチは指定されたパッケージおよびサブパッケージ (存在する場合) 内の表明を無効にします。引数が単に "..." である場合には、スイッチは現在の作業ディレクトリ内の名前の指定されていないパッケージ内の表明を無効にします。"..." で終わっていない引数が 1 つ指定されると、スイッチは指定されたクラス内の表明を無効にします。</para>
<para>パッケージ <literal>com.wombat.fruitbat</literal> 内の表明を有効にし、クラス <literal>com.wombat.fruitbat.Brickbat</literal> 内の表明を無効にしてプログラムを実行するには、次のコマンドを使用できます。<informalexample><screen>example% <userinput>java -ea:com.wombat.fruitbat...
      -da:com.wombat.fruitbat.Brickbat <replaceable>MainClass</replaceable></userinput></screen>
</informalexample></para>
<para><option>disableassertions</option> と <option>da</option> スイッチは、すべてのクラスローダおよびシステムクラス (クラスローダを持たないもの) に適用されます。この規則には 1 つ例外があります。引数が指定されないフォームでは、スイッチはシステムに適用されません。この例外は、システムクラス以外のすべてのクラス内の表明を有効にする上で便利です。すべてのシステムクラス内の表明を有効にするスイッチは別に用意されています。以下の <option>disablesystemassertions</option> を参照してください。</para>
</listitem></varlistentry>
<varlistentry><term><option>enablesystemassertions</option></term><term><option>esa</option></term><listitem><para>すべてのシステムクラス内の表明を有効にします (システムクラスに対する <replaceable>default assertion status</replaceable> を <literal>true</literal> に設定する)。</para>
</listitem></varlistentry>
<varlistentry><term><option>disablesystemassertions</option></term><term><option>dsa</option></term><listitem><para>すべてのシステムクラス内の表明を無効にします。</para>
</listitem></varlistentry>
<varlistentry><term><option>jar</option> </term><listitem><para><acronym>JAR</acronym> の中にカプセル化されたプログラムを実行します。最初の引数は、起動クラスの名前ではなく、<acronym>JAR</acronym> アーカイブファイルの名前になります。このオプションが動作するためには、<acronym>JAR</acronym> ファイルのマニフェストに形式 <literal>Main-Class:</literal><replaceable>classname</replaceable> の行が入っていなければなりません。<replaceable>classname</replaceable> は、ユーザのアプリケーションの開始点となる <literal>public</literal> <literal>static</literal> <literal>void</literal> <literal>main(String[]</literal> <literal>args)</literal> メソッドを持つクラスを識別します。<acronym>JAR</acronym> ファイルと <acronym>JAR</acronym> ファイルのマニフェストを扱う方法については、Jar ツールのリファレンスページと「Java Tutorial」の「Jar Files」を参照してください。このオプションを使用するときは、<acronym>JAR</acronym> ファイルがすべてのユーザクラスのソースとなるため、他のユーザクラスパスの設定は無視されます。Solaris 8 では、<literal>java</literal> <option>jar</option> オプションで実行できる <acronym>
JAR</acronym> ファイルに、実行のたびにオプションを指定する必要がないアクセス権を設定できます。</para>
</listitem></varlistentry>
<varlistentry><term><option>noclassgc</option> </term><listitem><para><option>Xnoclassgc</option> に置き換わりました。</para>
</listitem></varlistentry>
<varlistentry><term><option>ms</option><replaceable>n</replaceable> </term><listitem><para><option>Xms</option> <replaceable>n</replaceable> に置き換わりました。</para>
</listitem></varlistentry>
<varlistentry><term><option>mx</option><replaceable>n</replaceable> </term><listitem><para><option>Xmx</option> <replaceable>n</replaceable> に置き換わりました。</para>
</listitem></varlistentry>
<varlistentry><term><option>ss</option><replaceable>n</replaceable> </term><listitem><para><option>Xss</option> <replaceable>n</replaceable> に置き換わりました。</para>
</listitem></varlistentry>
<varlistentry><term><option>verbose</option></term><term><literal>-verbose:</literal><replaceable>class</replaceable></term><listitem><para>クラスがロードされるたびにクラスに関する情報を表示します。</para>
</listitem></varlistentry>
<varlistentry><term><option>verbosegc</option> </term><listitem><para><option>verbose:gc</option> に置き換わりました。</para>
</listitem></varlistentry>
<varlistentry><term><option>verbose:gc</option> </term><listitem><para>ガベージコレクションイベントが発生するたびに報告します。</para>
</listitem></varlistentry>
<varlistentry><term><option>verbose:jni</option> </term><listitem><para>ネイティブメソッドおよびその他の Java Native Interface (JNI) の使用に関する情報を報告します。</para>
</listitem></varlistentry>
<varlistentry><term><option>version</option> </term><listitem><para>バージョン情報を表示して終了します。</para>
</listitem></varlistentry>
<varlistentry><term><option>showversion</option> </term><listitem><para>バージョン情報を表示して、実行を継続します。</para>
</listitem></varlistentry>
<varlistentry><term><option>?</option> </term><term><option>help</option> </term><listitem><para>使用法を表示して終了します。</para>
</listitem></varlistentry>
<varlistentry><term><option>X</option> </term><listitem><para>非標準オプションに関する情報を表示して終了します。</para>
</listitem></varlistentry>
</variablelist>
</refsect2>
<refsect2><title>非標準オプション</title>
<indexterm id="java-1-indx-4"><primary sortas="java">java &mdash; Java interpreter</primary><secondary>Non-Standard Options</secondary></indexterm><variablelist termlength="wholeline"><varlistentry><term remap="20"><option>Xint</option> </term><listitem><para>インタプリタ専用モードで動作します。ネイティブコードへのコンパイルは 無効になり、すべてのバイトコードがインタプリタによって実行されます。Java HotSpot VM 適応型コンパイラによって得られるパフォーマンス上の利点は、このモードでは実現されません。</para>
</listitem></varlistentry>
<varlistentry><term remap="20"><option>Xbootclasspath:</option><replaceable>bootclasspath</replaceable> </term><listitem><para>ブートクラスファイルを探すディレクトリ、<acronym>JAR</acronym> アーカイブ、および <acronym>ZIP</acronym> アーカイブをコロンで区切ったリストを指定します。指定されたパスに存在するブートクラスファイルは、Java 2 SDK と Java 2  Runtime Environment に含まれるブートクラスファイルの代わりに使わ れます。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xbootclasspath/a:</option><replaceable>path</replaceable> </term><listitem><para>デフォルトのブートストラップクラスパスに追加するディレクトリ、<acronym>JAR</acronym> アーカイブ、および <acronym>ZIP</acronym> アーカイブのパスをコロンで区切って指定します。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xbootclasspath/p:</option><replaceable>path</replaceable> </term><listitem><para>デフォルトのブートストラップクラスパスの前に追加するディレクトリ、<acronym>JAR</acronym> アーカイブ、および <acronym>ZIP</acronym> アーカイブのパスをコロンで区切って指定します。注: このオプションを、<literal>rt.jar</literal> 内のクラスをオーバーライドする目的で使用するアプリケーションは指定しないでください。指定すると、Java 2 Runtime Environment バイナリコードライセンス違反になることがあります。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xcheck:jni</option></term><listitem><para>Java Native Interface 機能のための追加チェックを実行します。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xdebug</option> </term><listitem><para>デバッガが有効な状態で起動します。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xfuture</option> </term><listitem><para>厳密なクラスファイル形式の検査を実行します。下位互換性を維持するため、Java 2 SDK の仮想マシンで実行されるデフォルトの形式検査は、JDK ソフトウェアの 1.1.x バージョンで実行される検査よりも 厳密ではありません。<option>Xfuture</option> フラグを使用すると、クラスファイル形式をより仕様に準拠したものにするための、さらに厳密なクラスファイル形式検査が有効になります。開発者が新しいコードを開発する際には、このフラグの使用を推奨します。Java アプリケーション起動ツールの将来のリリースでは、より厳密な検査がデフォルトになるからです。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xnoclassgc</option> </term><listitem><para>クラスのガベージコレクションを無効にします。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xincgc</option> </term><listitem><para>インクリメンタルガベージコレクタを有効にします。 インクリメンタルガベージコレクタは、デフォルトでは無効に設定されていますが、有効にするとプログラムの実行中に不意のガベージコレクションにより停止する事態を防ぎます。それでも、ガベージコレクションの全体的なパフォーマンスにおいて、約 10 % の低下を招きます。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xloggc:</option><replaceable>file</replaceable> </term><listitem><para><option>verbose:gc</option> と同様、各ガベージコレクションイベントで レポートを作成し、このデータを <replaceable>file</replaceable> に記録します。 <option>verbose:gc</option> により入手できる情報に加えて、レポートされるイベントには最初のガベージコレクションイベントからの経過時間 (秒数) が付けられます。 </para>
<para>ネットワークの遅延による JVM の停止を避けるために、このファイルの記憶域として常にローカルファイルシステムを使用します。このファイルは、フルファイルシステムおよびロギングが不完全なファイルに追加される場合、切り詰められることがあります。 コマンド行で <option>verbose:gc</option> といっしょに指定された場合、このオプションが優先されます。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xms</option><replaceable>n</replaceable> </term><listitem><para>メモリ割り当てプールの初期サイズを指定します。指定する値は、1000 より大きくなければなりません。<replaceable>n</replaceable> の単位を変更するには、K バイトには文字 <literal>k</literal> を、M バイトには文字 <literal>m</literal> を数値の後に付けます。デフォルトは <literal>2m</literal> です。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xmx</option><replaceable>n</replaceable> </term><listitem><para>メモリ割り当てプールの最大サイズを指定します。指定する値は、1000 より大きくなければなりません。<replaceable>n</replaceable> の単位を変更するには、K バイトには文字 <literal>k</literal> を、M バイトには文字 <literal>m</literal> を数値の後に付けます。デフォルトは <literal>64m</literal> です。この値の上限はおよそ、SPARC プラットフォームの場合は <literal>4000m</literal> からオーバーヘッドの量を引いたものであり、x86 プラットフォームの場合は <literal>2000m</literal> からオーバーヘッドの量を引いたものです。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xprof</option> </term><listitem><para>実行中のプログラムのプロファイルを生成し、プロファイリングデータを標準出力に送ります。このオプションは、プログラム開発に役立つユーティリティとして提供されているもので、本番稼動システムでの使用を目的としたものではありません。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xrunhprof</option><literal>[:</literal><replaceable>help</replaceable><literal>][:</literal><replaceable>suboption</replaceable><literal>=</literal><replaceable>value,...</replaceable><literal>]</literal></term><listitem><para>CPU、ヒープ、またはモニターのプロファイリングを有効にします。通常、このオプションのあとには、コンマで区切られた「<replaceable>suboption</replaceable>=<replaceable>value</replaceable>」のペアが続きます。サブオプションおよびそれらのデフォルト値の一覧を取得するには、コマンド <command>java</command> <option>Xrunhprof:help</option> を実行します。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xss</option><replaceable>n</replaceable> </term><listitem><para>Java スレッドはそれぞれ 2 つのスタックを持っています。1 つは Java コード用で、もう 1 つは C コード用です。<option>Xss</option> オプションは、1 つのスレッド内の C コードが使用できる最大スタックサイズを <replaceable>n</replaceable> に設定します。<command>java</command> に渡されたプログラムの実行中に生成されたスレッドはそれぞれ、独自の C スタックサイズとして <replaceable>n</replaceable> を持っています。<replaceable>n</replaceable> のデフォルトの単位はバイトで、<replaceable>n</replaceable> は 1000 バイトよりも大きくなければなりません。<replaceable>n</replaceable> の意味を変更する場合、キロバイトにするには文字 <literal>k</literal> を、メガバイトにするには文字 <literal>m</literal> を追加します。デフォルトのスタックサイズは 128 K バイトです (<option>Xss</option><literal>512k</literal>)。</para>
</listitem></varlistentry>
<varlistentry><term><option>Xrs</option></term><listitem><para>Java 仮想マシン (JVM) によるオペレーティングシステムシグナルの利用を減らします。</para>
<para>Sun の JVM は、シグナルをキャッチして異常な JVM 終了に対するシャットダウンフックを実装します。JVM は、<systemitem class="constant">SIGHUP</systemitem>、<systemitem class="constant">SIGINT</systemitem>、<systemitem class="constant">SIGTERM</systemitem> を使用してシャットダウンフックの実行を開始します。JVM はスレッドダンプの実行には、<systemitem class="constant">SIGQUIT</systemitem> を使用します。</para>
<para>JVM を組み込んだアプリケーションは、<systemitem class="constant">SIGINT</systemitem> や <systemitem class="constant">SIGTERM</systemitem> のようなシグナルを頻繁にトラップする必要があります。このような場合、アプリケーションのシグナルハンドラと JVM シャットダウンフック機能の間に干渉が発生する可能性があります。</para>
<para>このような干渉を避けるために、<option>Xrs</option> オプションを使用して JVM シャットダウンフック機能を無効にすることができます。<option>Xrs</option> が使用されると、<systemitem class="constant">SIGINT</systemitem>、<systemitem class="constant">SIGTERM</systemitem>、<systemitem class="constant">SIGHUP</systemitem>、および <systemitem class="constant">SIGQUIT</systemitem> のシグナルマスクは JVM によって変更されず、これらのシグナルのシグナルハンドラはインストールされません。</para>
</listitem></varlistentry>
<varlistentry><term><option>XX:+UseAltSigs</option></term><listitem><para>VM は、デフォルトで <systemitem>SIGUSR1</systemitem> と <systemitem>SIGUSR2</systemitem> を使用するため、<systemitem>SIGUSR1</systemitem> と <systemitem>SIGUSR2</systemitem> をシグナル連鎖するアプリケーションと競合する場合があります。<option>XX:+UseAltSigs</option> オプションは、VM にデフォルトとして <systemitem>SIGUSR1</systemitem> と <systemitem>SIGUSR2</systemitem> 以外のシグナルを使用させます。
</para>
</listitem></varlistentry>
</variablelist>
</refsect2>
</refsect1>
<refsect1><title>&envr-tt;</title>
<variablelist termlength="narrow"><varlistentry><term remap="20"><envar>CLASSPATH</envar> </term><listitem><para>ユーザ定義クラスへのパスをシステムに通知するために使用します。複数のディレクトリを指定する場合はコロンで区切ります。次に例を示します。<informalexample>
<para><literal>.:/home/avh/classes:/usr/local/java/classes</literal> </para>
</informalexample></para>
</listitem></varlistentry>
</variablelist>
</refsect1>
<refsect1><title>&attr-tt;</title>
<para>次の属性については、<citerefentry><refentrytitle>attributes</refentrytitle><manvolnum>5</manvolnum></citerefentry> のマニュアルページを参照してください。</para>
<informaltable frame="all" orient="port"><tgroup cols="2" colsep="1" rowsep="1"><colspec colnum="1" colname="col1" colwidth="1*" colsep="1" align="left"><colspec colnum="2" colname="col2" colwidth="1*" align="left"><thead><row><entry colname="col1" align="center" valign="top">属性タイプ</entry><entry colname="col2" align="center" valign="top">属性値</entry></row></thead><tbody><row><entry>使用条件</entry><entry>SUNWj3rt, SUNWj3dev</entry></row><row><entry>インタフェースの安定性</entry><entry>&note-tt; を参照</entry></row></tbody></tgroup></informaltable>
</refsect1>
<refsect1><title>&also-tt;</title>
<para><citerefentry><refentrytitle>javac</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>jdb</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>javac</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>jar</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>set</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>attributes</refentrytitle><manvolnum>5</manvolnum></citerefentry> </para>
<para>次については、<literal>java.sun.com</literal> を参照または検索してください。</para>
<variablelist termlength="wholeline">
<varlistentry><term remap="10"><citetitle>JDK のファイル構造 (JDK File Structure) :</citetitle></term><listitem><para><ulink url="http://java.sun.com/j2se/1.4/docs/tooldocs/solaris/jdkfiles.html"></ulink>http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/jdkfiles.html : 英語版
</para> 
</listitem></varlistentry>
<varlistentry><term><citetitle>クラスパスの設定 (Setting the Classpath) :</citetitle></term><listitem><para><ulink url="http://java.sun.com/j2se/1.4/docs/tooldocs/solaris/classpath.html"></ulink>http://java.sun.com/j2se/1.4.1/docs/tooldocs/solaris/classpath.html : 英語版
</para>
</listitem></varlistentry>
<varlistentry><term><citetitle>JAR Files :</citetitle></term><listitem><para><ulink url="http://java.sun.com/docs/books/tutorial/jar/"></ulink>http://java.sun.com/docs/books/tutorial/jar/</para>
</listitem></varlistentry>
</variablelist>
</refsect1>
<refsect1><title>&note-tt;</title>
<para>すべての <option>X</option> オプションは流動的です。&opts-tt; の節で記述されているように、いくつかの標準オプションは現在では使われていません。</para>
</refsect1>
<!--+ 07/27/00 08:33:40
    | tagMorph:  $Id: tagMorph-engine 1.54 1998/01/19 05:44:48 $
    | tagMorph library:  $Id: libtagMorph.a 1.50 1998/01/19 22:02:51 $
    | sunman-to-solbook 1.17
    +-->
</refentry>
<?Pub *0000026169>
